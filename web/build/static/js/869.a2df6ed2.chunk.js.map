{"version":3,"file":"static/js/869.a2df6ed2.chunk.js","mappings":"yLA4EA,UAzEiB,WAKf,OAJAA,EAAAA,EAAAA,YAAU,WACR,GACC,KAGDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEKC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAF,SAAA,EACRF,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,GAAG,KAAKC,UAAU,SAAQL,SAAC,8BACnCF,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,GAAI,KAAKJ,SAAC,8BAClBC,EAAAA,EAAAA,MAACK,EAAAA,EAAS,CAAAN,SAAA,EACTF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+DACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+MACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sLACHC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,kGAA4CF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iCAAqC,uFAC5FC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,qWAAoEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,iCAAqC,aACpHF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACC,IAAK,6CAA8CC,SAAO,EAACC,UAAQ,EAACC,KAAK,aAGjFb,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAACC,GAAI,KAAKJ,SAAC,8BAClBC,EAAAA,EAAAA,MAACK,EAAAA,EAAS,CAAAN,SAAA,EACTF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+OACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6OACHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gPAEHF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gDACHC,EAAAA,EAAAA,MAAA,SAAOW,MAAM,+BAA8BZ,SAAA,EACzCF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2CAGZC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BAERC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BAERC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BAERC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iCAKhBF,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACC,IAAK,iBAAkBC,SAAO,EAACC,UAAQ,EAACC,KAAK,gBAM5D,C","sources":["pages/About/home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Header, Segment,Container,Image } from 'semantic-ui-react'; \n\nconst NewAbout = () => { \n  useEffect(() => {\n    //displayAbout().then();\n  }, []);\n\n  return (\n    <>\n      {\n         <Segment>\n         <Header as='h2' textAlign='center'>使用说明</Header>\n         <Header as={'h3'}>快速开始</Header>\n         <Container>\n          <p>1. 微信扫码登录系统。</p>\n          <p>2. 点击顶部菜单栏中的“令牌”，点击“添加新的令牌”来创建自己的令牌。</p>\n          <p>3. 在顶部菜单栏中点击“充值”，为自己账户中充值一定的token额度。</p>\n          <p>4. 按照OpenAI相关接口将 https://api.openai.com 更换成 <strong>https://perkai.pushplus.plus</strong> ,再使用创建的令牌即可使用。</p>\n          <p>5. 第三方系统可参考菜单栏的“聊天”，在“设置”中的“令牌”填入自己的令牌，即可正常使用。如有“接口地址”或“baseUrl”则填入 <strong>https://perkai.pushplus.plus</strong>。</p>\n          <Image src={'https://image.pushplus.plus/image/chat.png'} rounded bordered size='huge'/>\n         </Container>\n         \n         <Header as={'h3'}>额度计算</Header>\n         <Container>\n          <p>请求接口将会消耗token，token的消耗按照字数来计算。可以在“日志\"中查看具体消耗的额度。</p>\n          <p>额度 =（提示 token 数 + 补全 token 数 * 补全倍率） * 模型倍率。其中补全倍率 GPT3.5 固定为 1.33，GPT4 为 2。</p>\n          <p>调用非对话模型OpenAI接口会返回消耗的总 token，但是你要注意提示和补全的消耗倍率不一样。</p>\n         \n          <p>预估费用如下：</p>\n          <table class='ui small basic compact table'>\n            <thead>\n                <tr>\n                    <th>大语言</th>\n                    <th>模型(Model)</th>\n                    <th>输入文字(Input)</th>\n                    <th>输出文字(Output)</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>GPT-3.5 Turbo</td>\n                    <td>4K context</td>\n                    <td>\t$0.0015 / 1K tokens</td>\n                    <td>\t$0.002 / 1K tokens</td>\n                </tr>\n                <tr>\n                    <td>GPT-3.5 Turbo</td>\n                    <td>16K context</td>\n                    <td>\t$0.003 / 1K tokens</td>\n                    <td>\t$0.004 / 1K tokens</td>\n                </tr>\n                <tr>\n                    <td>GPT-4</td>\n                    <td>8K context\t</td>\n                    <td>\t$0.03 / 1K tokens</td>\n                    <td>\t$0.06 / 1K tokens</td>\n                </tr>\n                <tr>\n                    <td>GPT-4</td>\n                    <td>32K context</td>\n                    <td>\t$0.06 / 1K tokens</td>\n                    <td>\t$0.12 / 1K tokens</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <Image src={'/image/log.png'} rounded bordered size='huge'/>\n          </Container>\n       </Segment>\n      }\n    </>\n  );\n};\n\n\nexport default NewAbout;\n"],"names":["useEffect","_jsx","_Fragment","children","_jsxs","Segment","Header","as","textAlign","Container","Image","src","rounded","bordered","size","class"],"sourceRoot":""}